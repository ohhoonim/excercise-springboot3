server.port=9090
spring.profiles.active=${SPRING_PROFILES_ACTIVE}

spring.application.name=jdbc-query-dsl

spring.docker.compose.lifecycle-management=start-only
spring.datasource.hikari.jdbc-url=jdbc:postgresql://localhost:15432/mydatabase
spring.datasource.hikari.username=myuser
spring.datasource.hikari.password=secret
spring.datasource.hikari.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.connection-timeout=3000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.max-lifetime=240000
spring.datasource.hikari.maximum-pool-size=20

spring.sql.init.mode=always

spring.threads.virtual.enabled=true

spring.rabbitmq.username=myuser
spring.rabbitmq.password=secret

spring.modulith.events.jdbc.schema-initialization.enabled=true
spring.modulith.moments.enable-time-machine=true
spring.modulith.moments.granularity=hours

spring.data.redis.host=localhost
spring.data.redis.port=6379

spring.cache.type=redis
spring.cache.redis.cache-null-values=true

# spring.security.oauth2.client.registration.keycloak.client-id=jdbc-query-dsl
# spring.security.oauth2.client.registration.keycloak.client-secret=ZSCGLF7qjPhsPVQZXZBRYiLF073pt1ZY
# spring.security.oauth2.client.registration.keycloak.scope=openid
# spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
# spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:9090/orderlines/test
# spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/ohhoonim-dev